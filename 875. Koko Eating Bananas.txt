from math import ceil
from typing import List

class Solution:
    def minEatingSpeed(self, piles: List[int], h: int) -> int:
        left, right = 1, max(piles)
        
        while left < right:
            mid = (left + right) // 2
            if self.canEatAll(piles, mid, h):
                right = mid
            else:
                left = mid + 1
                
        return left

    def canEatAll(self, piles: List[int], k: int, h: int) -> bool:
        hours_needed = sum(ceil(pile / k) for pile in piles)
        return hours_needed <= h