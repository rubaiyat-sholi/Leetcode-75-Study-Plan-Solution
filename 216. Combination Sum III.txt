from typing import List

class Solution:
    def combinationSum3(self, k: int, n: int) -> List[List[int]]:
        result = []
        
        def backtrack(start, remaining_k, remaining_sum, path):
            if remaining_k == 0 and remaining_sum == 0:
                result.append(path[:])
                return
            if remaining_k == 0 or remaining_sum < 0:
                return
            
            for i in range(start, 10): 
                path.append(i)
                backtrack(i + 1, remaining_k - 1, remaining_sum - i, path)
                path.pop() 

        backtrack(1, k, n, [])
        return result